# Progress

## Completed

### Core Application Development
- Project requirements clarification (desktop-first, clean design, hash-based routing)
- Project file structure creation
- HTML scaffold with templates for all views
- CSS styling with clean, minimalist design
- Storage implementation (IndexedDB + localStorage fallback)
- Router implementation for hash-based navigation
- Model layer for concept data
- Home controller with draggable tile grid
- Detail controller with Desmos integration
- Onboarding flow functionality
- Desmos preview image generation and extraction
- Proper resource management between view transitions

### UI/UX Improvements
- Resizable tiles with corner dragging functionality
- Improved boundary constraints for resizing operations
- Enhanced prevention of navigational clicks during resize operations
- Fixed inconsistency between boundary limits for resizing and repositioning
- Maximized available space for the home page by removing padding and margins
- Enhanced visual feedback during user interactions (blue highlight during dragging)
- Implemented view-specific styling to maintain detail view margins while maximizing home view space

### Django Backend Integration
- Set up Django project structure (Step 1 of HelioHost integration plan)
- Configured Django settings and URL routing
- Created template structure with proper static files handling
- Set up environment variables for secure configuration
- Created WSGI configuration for HelioHost deployment
- Set up PostgreSQL database for server-side storage (Step 2)
- Configured Django to use PostgreSQL with environment variables
- Set up local development database using Podman
- Migrated database schema to PostgreSQL
- Documented database configuration

### Authentication System
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- Fixed authentication system with improved error handling for production environment
- Implemented comprehensive logging for troubleshooting authentication issues 
- Created deployment script for the authentication fix

### Email Backend Configuration
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost

### SMTP Troubleshooting (May 27, 2025)
- Investigated SMTP authentication failures on HelioHost production environment
- Created comprehensive SMTP test scripts: `app.py`, `heliohost_app.py`, `test_on_heliohost.py`
- Verified email account configuration in Plesk control panel
- Tested network connectivity to mail server (sr308.hostgator.com:587)
- Confirmed SMTP authentication credentials are correctly configured
- Documented authentication error patterns and server responses
- Restored project files from `old_proj.bak/` directory to main location
- Prepared server-side testing approach for final SMTP resolution

### Bug Fixes
- Fixed: Application allowing access without authentication
- Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
- Fixed: Desmos API updated from v1.7 to v1.10 with required API key
- Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
- Fixed: Improved onboarding element animations and visual feedback
- Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
- Fixed: Onboarding flow repeatedly appearing during the same session
- Fixed: Navigation issues with memory leaks when switching between views
- Fixed: Resize operations sometimes triggering navigation to detail view
- Fixed: Tiles could be resized outside the container boundaries
- Fixed: Inconsistent boundary limits between resize and drag operations

### Deployment and Cleanup
- Bundled Django REST Framework and dependencies as .whl files in staticlibs for deployment without shell access
- Updated dispatch.wsgi to load .whl files from staticlibs
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Memory Bank documentation setup and maintenance
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing
- Added /api/auth/status/ endpoint for lightweight authentication checks (May 20, 2025)
- Updated frontend AuthClient to use new endpoint, eliminating 403 errors from /api/concepts/
- Verified login flow and authentication status detection now work without polluting logs
- All previous authentication, sync, and deployment steps remain as documented
- Removed Sendmail backend and switched to SMTP for outgoing email due to DKIM issues
- Production email now uses Django's SMTP backend (requires EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS, EMAIL_USE_SSL in .env)
- Logging and error handling for email sending fully updated and verified on HelioHost
- Removed all custom Django code and wheels from staticlibs
- Updated dispatch.wsgi to remove staticlibs/django references and ensure only pip/system Django is used
- Moved ALLOWED_HOSTS to .env and updated settings.py to use env.list('ALLOWED_HOSTS')
- Committed and pushed all changes for HelioHost deployment
- Investigated and resolved missing rest_framework error on HelioHost
- Cleaned up unnecessary files in the project (cleanup.sh)
- Created OTP-based authentication views and templates
- Deployed basic application with functional frontend
- Implemented login requirement for the main application (Step 3)
- Added login_required decorator to index view
- Configured proper login/logout redirects
- Enhanced authentication templates with better styling
- Added debugging middleware for authentication troubleshooting
- Enhanced authentication templates with better styling
- Identified critical PostgreSQL version compatibility issue with HelioHost:
  - Django 5.0.7 requires PostgreSQL 14+ but HelioHost only provides PostgreSQL 13.20
  - Attempted multiple solutions to bypass version check (monkeypatching, custom backends, etc.)
  - None of the approaches resolved the issue
  - Current blocking issue for production deployment
- Removed padding and margins from the home page to maximize usable space:
  - Eliminated unnecessary whitespace around the content
  - Ensured consistent spacing across different screen sizes
  - Improved overall layout and design coherence
  - Enhanced user experience by providing more visible content area
  - Fixed: Application allowing access without authentication
  - Fixed: Onboarding flow not working correctly with scrolled content or finding Desmos UI elements
  - Fixed: Desmos API updated from v1.7 to v1.10 with required API key
  - Fixed: Second step of onboarding flow failing to detect image menu items in Desmos v1.10
  - Fixed: Improved onboarding element animations and visual feedback
  - Fixed: Image upload stuck at "Uploading image..." by letting Desmos handle uploads natively
  - Fixed: Onboarding flow repeatedly appearing during the same session
  - Fixed: Navigation issues with memory leaks when switching between views
  - Fixed: Resize operations sometimes triggering navigation to detail view
  - Fixed: Tiles could be resized outside the container boundaries
  - Fixed: Inconsistent boundary limits between resize and drag operations
  - None remaining identified, pending thorough testing